import{a as I}from"./chunk-RD4WEUTT.js";import{e as y}from"./chunk-C74KJMKG.js";import{M as p,Q as l,bc as f,hc as D,jc as S}from"./chunk-GMV73Z22.js";import{f as L}from"./chunk-GAL4ENT6.js";var c=L(I());var b=class g{songsData=(0,c.cloneDeep)(D);router=l(f);sharedDataService=l(S);_analytics={languageData:[],genreData:[],timelineData:[],sourceData:[],topSingers:[],topComposers:[],topLyricists:[],durationStats:{totalMinutes:0,avgMinutes:0,shortSongs:0,mediumSongs:0,longSongs:0},totalSongs:0,uniqueArtists:0,uniqueLanguages:0,uniqueGenres:0,uniqueSources:0,songsPerYear:0,mostActiveYear:0,oldestSong:"",newestSong:""};constructor(){this.calculateAnalytics()}calculateAnalytics(){if(!this.songsData||this.songsData.length===0)return;let r=this.songsData.reduce((e,t)=>(t.language&&(e[t.language]=(e[t.language]||0)+1),e),{}),n=Object.entries(r).sort(([,e],[,t])=>t-e).map(([e,t])=>({name:e,value:t,percentage:(t/this.songsData.length*100).toFixed(1)})),a=this.songsData.reduce((e,t)=>{let s=t.genre||"Unknown";return e[s]=(e[s]||0)+1,e},{}),u=Object.entries(a).sort(([,e],[,t])=>t-e).map(([e,t])=>({name:e,value:t,percentage:(t/this.songsData.length*100).toFixed(1)})),v=this.songsData.reduce((e,t)=>{let s=t.source||"Unknown";return e[s]=(e[s]||0)+1,e},{}),m=Object.entries(v).sort(([,e],[,t])=>t-e).map(([e,t])=>({name:e,value:t,percentage:(t/this.songsData.length*100).toFixed(1)})),w=this.songsData.reduce((e,t)=>{let s=new Date(t.published_on||"").getFullYear();return!isNaN(s)&&s>1900&&(e[s]=(e[s]||0)+1),e},{}),o=Object.entries(w).sort(([e],[t])=>new Date(t).getTime()-new Date(e).getTime()).sort(([,e],[,t])=>t-e).map(([e,t])=>({year:Number(e),songs:t,percentage:(t/this.songsData.length*100).toFixed(1)})),d=this.songsData.reduce((e,t)=>(t.singers&&Array.isArray(t.singers)&&t.singers.forEach(s=>{s&&s.trim()&&(e[s.trim()]=(e[s.trim()]||0)+1)}),e),{}),j=Object.entries(d).sort(([,e],[,t])=>t-e).slice(0,20).map(([e,t])=>({name:e,songs:t,percentage:(t/this.songsData.length*100).toFixed(1)})),A=this.songsData.reduce((e,t)=>(t.music_composer&&t.music_composer.trim()&&(e[t.music_composer.trim()]=(e[t.music_composer.trim()]||0)+1),e),{}),C=Object.entries(A).sort(([,e],[,t])=>t-e).slice(0,10).map(([e,t])=>({name:e,songs:t,percentage:(t/this.songsData.length*100).toFixed(1)})),x=this.songsData.reduce((e,t)=>(t.lyricist&&t.lyricist.trim()&&(e[t.lyricist.trim()]=(e[t.lyricist.trim()]||0)+1),e),{}),F=Object.entries(x).sort(([,e],[,t])=>t-e).slice(0,10).map(([e,t])=>({name:e,songs:t,percentage:(t/this.songsData.length*100).toFixed(1)})),i=this.songsData.filter(e=>e.duration).map(e=>y(e.duration||"0:00")).filter(e=>e>0),O=Math.floor(i.reduce((e,t)=>e+t,0)/60),Y=i.length>0?Math.floor(i.reduce((e,t)=>e+t,0)/i.length/60):0,q={totalMinutes:O,avgMinutes:Y,shortSongs:i.filter(e=>e<180).length,mediumSongs:i.filter(e=>e>=180&&e<300).length,longSongs:i.filter(e=>e>=300).length},h=o.map(e=>e.year).filter(e=>e>1900),M=Math.min(...h),R=Math.max(...h),_=o[0]?.year||0;this._analytics={languageData:n,genreData:u,timelineData:o,sourceData:m,topSingers:j,topComposers:C,topLyricists:F,durationStats:q,totalSongs:this.songsData.length,uniqueArtists:Object.keys(d).length,uniqueLanguages:n.length,uniqueGenres:u.length,uniqueSources:m.length,songsPerYear:o.length>0?this.songsData.length/o.length:0,mostActiveYear:_,oldestSong:M.toString(),newestSong:R.toString()}}getProgressColor(r){let n=["linear-gradient(45deg, #28a745, #20c997)","linear-gradient(45deg, #007bff, #17a2b8)","linear-gradient(45deg, #ffc107, #fd7e14)","linear-gradient(45deg, #dc3545, #e83e8c)","linear-gradient(45deg, #6f42c1, #6610f2)","linear-gradient(45deg, #fd7e14, #dc3545)","linear-gradient(45deg, #20c997, #17a2b8)","linear-gradient(45deg, #e83e8c, #6f42c1)"];return n[r%n.length]}navigateToPlaylist=r=>{r&&(this.sharedDataService.filteredText=r.trim(),this.router.navigate(["playlists",0]))};getEraCount=r=>{if(!this.analytics.timelineData)return 0;switch(r){case"classic":return this.analytics.timelineData.filter(n=>n.year<2e3).reduce((n,a)=>n+a.songs,0);case"modern":return this.analytics.timelineData.filter(n=>n.year>=2e3&&n.year<2010).reduce((n,a)=>n+a.songs,0);case"contemporary":return this.analytics.timelineData.filter(n=>n.year>=2010).reduce((n,a)=>n+a.songs,0);default:return 0}};get collectionSpanYears(){if(!this.analytics.newestSong||!this.analytics.oldestSong)return 0;let r=parseInt(this.analytics.newestSong,10),n=parseInt(this.analytics.oldestSong,10);return r-n}get analytics(){return(0,c.cloneDeep)(this._analytics)}static \u0275fac=function(n){return new(n||g)};static \u0275prov=p({token:g,factory:g.\u0275fac,providedIn:"root"})};export{b as a};
